name: Deploy to EC2

on:
  workflow_dispatch:

jobs:
  deploy:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash  
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false
      
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      # Get EC2 name 
      - name: Get EC2 Instance name
        run: echo "instance_name=$(terraform output -raw instance_name)" >> $GITHUB_OUTPUT
        id: flag_output
      
      - name: Use prior output
        run: echo "The count was ${{ steps.flag_output.outputs.instance_name }}"